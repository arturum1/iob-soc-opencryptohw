name: CI

# Set default shell as interactive (source ~/.bashrc)
defaults:
  run:
    shell: bash -ieo pipefail {0}

on:
  push:
    branches:
      - main
      - versat_integration
  # Don't forget to require approval for all outside collaborators
  pull_request:
    branches: '*'
  # Allow manual workflow runs
  workflow_dispatch:

# Run only one instance of this workflow at a time
# cancel-in-progress: stop running workflow and run latest instead
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pc-emul:
    runs-on: self-hosted
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: test-clean
        run: make test-clean
      - name: test-pc-emul
        run: make test-pc-emul

  generate-versat:
    runs-on: self-hosted
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: test-clean
        run: make test-clean
      - name: generate versat instance
        run: make pc-emul-output-versat

#  tester-verilator:
#    runs-on: self-hosted
#    timeout-minutes: 30
#    # always run, except when previous job was cancelled
#    if: ${{ !cancelled() }}
#    # run after indicated job
#    needs: pc-emul
#
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          submodules: 'recursive'
#      - name: clean
#        run: make clean SIMULATOR=verilator
#      - name: tester-sim-test
#        run: make tester-sim-test SIMULATOR=verilator
#
#  tester-fpga:
#    runs-on: self-hosted
#    timeout-minutes: 90
#    # always run, except when previous job was cancelled
#    if: ${{ !cancelled() }}
#    needs: tester-verilator
#
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          submodules: 'recursive'
#      - name: clean
#        run: make clean
#      - name: tester-fpga-test
#        run: make tester-fpga-test
